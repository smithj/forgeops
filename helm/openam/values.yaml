# Default values for openam runtime chart
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into the templates.

component: openam

image:
  repository: gcr.io/forgerock-io/am/pit1
  tag: 7.0.0-1ba49f89bf13e3d0543c80fd5fa284e32b5fd9e4
  # Switch to IfNotPresent once we have milestone builds
  pullPolicy: Always

gitImage:
  repository: gcr.io/forgerock-io/git
  tag: 6.5.1
  pullPolicy: Always

utilImage:
  repository: gcr.io/forgerock-io/util
  tag: 7.0.0-5135331287b8056
  pullPolicy: Always

domain: example.com
subdomain: iam

config:
  name: frconfig
  strategy: git

openamReplicaCount: 1

configLdapPort:  1389
configLdapHost: configstore-0.configstore


# This option:
#  -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true \
# is disabled to avoid http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0450
# This may impact amster imports for some configurations (SAML entities)
# If you need to renable this for amster, it should be disabled after the import is complete

catalinaOpts: >
  -server
  -Dcom.sun.identity.configuration.directory=/home/forgerock/openam
  -Dcom.iplanet.services.stats.state=off

# For visualVM debug, you can add this to the above:
#-Dcom.sun.management.jmxremote.port=<port>
#-Dcom.sun.management.jmxremote.authenticate=false
#-Dcom.sun.management.jmxremote.ssl=false
#-Dcom.sun.management.jmxremote.rmi.port=<port>
#-Djava.rmi.server.hostname=$HOST_HOSTNAME


# To use a tomcat web.xml from a k8s config map instead of the one built into the container, set the following to true.
useConfigMapWebxml: false

# Suffix for DS config store.
rootSuffix:  "ou=am-config"

am:
  home: /home/forgerock/openam
  context: am
  secretsDir: /home/forgerock/openam/security/secrets/default
  keystoresDir: /home/forgerock/openam/security/keystores
  instance: http://openam:80/am

# Controls the config type and method for installation and configuring the AM image.
# Once completion of the move to use FBC these values can be removed.
fbcEnabled: false
configMode: UNCONFIGURED


# Valid logger types: fluent-bit, none
# For audit logs it is suggested you configure AM to send directly to ElasticSearch.
logDriver: none

# The defaults below are small and OK for testing.
# For production you wil want to set CPU limits to help Kube Schedule the pods.
resources:
 limits:
   memory: 1300Mi
 requests:
   memory: 1200Mi

# Set to true to create a boot.json file to bootstrap AM. If set to false, AM will come up to the configurator page.
createBootstrap: true

# This is an optional path to a script to execute before AM starts up. It can copy in images, update the web.xml, etc.
# If you change set it to the full path to your cloned configuration.  Example: /git/config/default/6.5/my-openam/custom.sh
amCustomizationScriptPath: "customize-am.sh"

# Liveness probe tuning - time in seconds
livenessPeriod: 60
livenessTimeout: 15

# Set the names below to provide custom secrets mounted in the AM pods (keystore, etc.). You must provide all secrets.
# See templates/secrets.yaml and secrets/... for details
existingSecrets: {}
# existingSecrets:
#   openamKeys: openam-keys
#   openamKeystorePasswords: openam-keystore-passwords

# Set the names below to provide custom config maps. You must provide all config maps.
# See templates/config-map.yaml for details
existingConfigMaps: {}
#existingConfigMaps:
#  bootJson: boot-json
#  amConfigMap: am-configmap

service:
  name: openam
  #type: NodePort
  type: ClusterIP
  externalPort: 80
  internalPort: 8080

ingress:
  class: nginx
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-methods: "PUT,GET,POST,HEAD,PATCH,DELETE"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "authorization,x-requested-with"
    # nginx.ingress.kubernetes.io/cors-allow-credentials: "false"

istio:
  enabled: false

# Pod Anti Affinity switch. For production this should be set to "hard", otherwise use "soft" or leave empty.
# The hard setting will force openam pods to be spread out over multiple hosts/zones. soft is best effort
# but pods will still be scheduled together if sufficient resources are not available. Setting "none" or any other
# value will result in no affinity settings.
podAntiAffinity: "none"

# This is the exact value for TopologyKey. The other possible value is "failure-domain.beta.kubernetes.io/zone"
# which will ensure that pod is scheduled on nodes in different zones thus allowing for HA across zones.
# Note you want to leave this value as is if you are deploying a single zone cluster and change the values only
# if you have a multi-zone cluster.
topologyKey: "kubernetes.io/hostname"

# Add extra environment variables to the AM container.
environment: {}
